@page "/"

<h3>University-Students</h3>


@inject DataAccess.Contracts.IStudentService studentService
@using DataAccess.Models
@inject MudBlazor.ISnackbar snackBar



<MudTable Elevation="25"
          Items="GetStudents()"
          @bind-student="student">
    <ToolBarContent>
        <MudText Typo="Typo.h6">List of Students</MudText>
        <MudToolBarSpacer />
    </ToolBarContent>
    <HeaderContent>
        <MudTh></MudTh>
        <MudTh>#</MudTh>
        <MudTh>First Name</MudTh>
        <MudTh>Last Name</MudTh>
        <MudTh>Phone Number</MudTh>
        <MudTh>Email</MudTh>
    </HeaderContent>
    <RowTemplate>
        <MudTd>
            <MudCheckBox 
                         @bind-Checked="@context.IsSelected" 
                         Label="@context.StudentId.ToString()" 
                         Color="Color.Default" />
        </MudTd>
        <MudTd DataLabel="Id">
            @context.StudentId
        </MudTd>
        <MudTd DataLabel="FirstName">@context.FirstName</MudTd>
        <MudTd DataLabel="LastName">@context.LastName</MudTd>
        <MudTd DataLabel="PhoneNumber">@context.PhoneNumber</MudTd>
        <MudTd DataLabel="PhoneNumber">@HandleNull(@context.Email)</MudTd>
    </RowTemplate>
</MudTable>


@code{


    public bool Dense { get; set; }


    public class Student_
    {
        public bool IsSelected { get; set; }
        public int StudentId { get; set; }
        public string FirstName { get; set; }
        public string LastName { get; set; }
        public string PhoneNumber { get; set; }
        public string Email { get; set; }
    }

    public List<Student_> students_ = new List<Student_>();
    private Student student = new Student();
    private List<Student> students = new List<Student>();
    protected override async Task OnInitializedAsync()
    {
        GetStudents();
    }
    private List<Student_> GetStudents()
    {
        students = studentService.GetStudents();

        foreach(var std in students)
        {
            students_.Add(new Student_()
            {
                IsSelected =false,
                Email = std.Email,
                FirstName = std.FirstName,
                LastName = std.LastName,
                PhoneNumber = std.PhoneNumber,
                StudentId = std.StudentId

            });
        }


        // return students;
        return students_;
    }

    private string HandleNull(string value)
    {
        if (value == null || value == "")
            return "N/A";
        else
            return value;
    }

}