@page "/"

<h3>University-Students</h3>


@inject DataAccess.Contracts.IStudentService studentService
@using DataAccess.Models
@inject MudBlazor.ISnackbar snackBar


<MudTable 
          Items="@GetStudents()" 
          MultiSelection="true" 
          @bind-SelectedItems="selectedItems1" 
          Hover="@hover">
    <HeaderContent>
        <MudTh>#</MudTh>
        <MudTh>First Name</MudTh>
        <MudTh>Last Name</MudTh>
        <MudTh>Phone</MudTh>
        <MudTh>Email</MudTh>
    </HeaderContent>
    <RowTemplate>
        <MudTd DataLabel="StudentId">@context.StudentId</MudTd>
        <MudTd DataLabel="FirstName">@context.FirstName\</MudTd>
        <MudTd DataLabel="LastName">@context.LastName</MudTd>
        <MudTd DataLabel="PhoneNumber">@context.PhoneNumber</MudTd>
        <MudTd DataLabel="Email">@context.Email</MudTd>
    </RowTemplate>
    <PagerContent>
        <MudTablePager PageSizeOptions="new int[]{50, 100}" />
    </PagerContent> 
</MudTable>

<MudText Inline="true">
    Selected items: 
        @(selectedItems1==null ? "" : string.Join(", ", selectedItems1.OrderBy(x=>x.StudentId).Select(x=>x.FirstName)))
</MudText>


@code{

    private bool hover = true;
    private HashSet<Student> selectedItems1 = new HashSet<Student>();


    private Student student = new Student();
    private List<Student> students = new List<Student>();
    protected override async Task OnInitializedAsync()
    {
        GetStudents();
    }
    private List<Student> GetStudents()
    {
        students = studentService.GetStudents();

        return students;
    }
    private Student GetStudent(int id)
    {
        student = studentService.GetStudent(id);

        return student;
    }
    private string HandleNull(string value)
    {
        if (value == null || value == "")
            return "N/A";
        else
            return value;
    }



}