// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace BlazorServerApp.Pages
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#nullable restore
#line 1 "C:\BlazorApps\BlazorServerApp\WebApplication1\_Imports.razor"
using System.Net.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\BlazorApps\BlazorServerApp\WebApplication1\_Imports.razor"
using Microsoft.AspNetCore.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\BlazorApps\BlazorServerApp\WebApplication1\_Imports.razor"
using Microsoft.AspNetCore.Components.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "C:\BlazorApps\BlazorServerApp\WebApplication1\_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "C:\BlazorApps\BlazorServerApp\WebApplication1\_Imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "C:\BlazorApps\BlazorServerApp\WebApplication1\_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "C:\BlazorApps\BlazorServerApp\WebApplication1\_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "C:\BlazorApps\BlazorServerApp\WebApplication1\_Imports.razor"
using BlazorServerApp;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "C:\BlazorApps\BlazorServerApp\WebApplication1\_Imports.razor"
using BlazorServerApp.Shared;

#line default
#line hidden
#nullable disable
#nullable restore
#line 11 "C:\BlazorApps\BlazorServerApp\WebApplication1\_Imports.razor"
using MudBlazor;

#line default
#line hidden
#nullable disable
#nullable restore
#line 12 "C:\BlazorApps\BlazorServerApp\WebApplication1\Pages\GLAcctData_.razor"
using DataAccess.Models;

#line default
#line hidden
#nullable disable
#nullable restore
#line 13 "C:\BlazorApps\BlazorServerApp\WebApplication1\Pages\GLAcctData_.razor"
using DataAccess.DTO;

#line default
#line hidden
#nullable disable
    [Microsoft.AspNetCore.Components.RouteAttribute("/gl_acct_data")]
    public partial class GLAcctData_ : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
        }
        #pragma warning restore 1998
#nullable restore
#line 176 "C:\BlazorApps\BlazorServerApp\WebApplication1\Pages\GLAcctData_.razor"
      

    // very first load of table for gl_postings,,, displays number of rows
    // in table
    // @ref="table" code in table configuration
    private MudTable<GL_Posting> table;
    protected override Task OnAfterRenderAsync(bool firstRender)
    {
        table.SetRowsPerPage(5);
        return base.OnAfterRenderAsync(firstRender);
    }


    private bool hover = true;
    private HashSet<GL_Posting> selectedGL_Postings = new HashSet<GL_Posting>();
    private GL_Posting selectedGL_Posting = new GL_Posting();
    private HashSet<int> selectedIds = new HashSet<int>();

    private GL_Posting gl_posting = new GL_Posting();
    private List<GL_Posting> gl_postings = new List<GL_Posting>();
    public List<GLPS_Data> glps_datas = new List<GLPS_Data>();
    List<TransactionSummary> transactionSummary = new List<TransactionSummary>();


    protected override async Task OnInitializedAsync()
    {
        GetAllGLPostings();
    }
    private List<GL_Posting> GetAllGLPostings()
    {
        gl_postings = glPostingService.GetAllGL_Postings();

        return gl_postings;
    }
    private GL_Posting GetGL_Posting(int id)
    {
        gl_posting = glPostingService.GetGL_Posting(id);

        return gl_posting;
    }


    private void ClickEvent(GL_Posting model)
    {
        // transaction-summary for all selected-gl-postings
        selectedIds = new HashSet<int>();
        foreach (var p in selectedGL_Postings)
        {
            selectedIds.Add(p.PostingsId);
        }
        List<int> selectedIdsOfList = selectedIds.ToList();
        transactionSummary = glPostingService.GetTransactionsSummary(selectedIdsOfList);

        var flag = false;
        foreach (var pid in selectedIdsOfList)
        {
            if (pid == selectedGL_Posting.PostingsId)
            {
                flag = true;
                break;
            }
            else
            {
                flag = false;
            }
        }
        if (flag)
        {
            GetGLPS_Datas(selectedGL_Posting);
        }
        else
        {
            GetGLPS_Datas(model);
        }
    }
    private List<GLPS_Data> GetGLPS_Datas(GL_Posting model)
    {
        if (model != null)
        {
            glps_datas = glPostingService.GetGLPS_Datas(model.PostingsId);
            return glps_datas;
        }
        else
        {
            return new List<GLPS_Data>();
        }
    }


    // filter    
    private SourceEnum sourceValue { get; set; } = SourceEnum.NONE;
    public enum SourceEnum { NONE, PJ, AB, CD, EF, JH }
    DateTime? fromTRDate = DateTime.Today;
    DateTime? toTRDate = DateTime.Today;
    private void DoFilter(string sourceValue)
    {
        // reset for 2nd and 3rd tables
        // that depends on 1st table gl_postings
        Reset();

        GL_Postings_Filter_Data filterData = new GL_Postings_Filter_Data();
        filterData.Source = sourceValue;
        filterData.FromTRDate = fromTRDate;
        filterData.ToTRDate = toTRDate;


        if (sourceValue != "" && sourceValue != null)
            gl_postings = glPostingService.GetFilterGL_Postings(filterData);
        else
            gl_postings = glPostingService.GetAllGL_Postings();
    }


    // this will reset when filter is active
    private void Reset()
    {
        glps_datas = new List<GLPS_Data>();
        transactionSummary = new List<TransactionSummary>();
        selectedGL_Postings = new HashSet<GL_Posting>();
        selectedGL_Posting = new GL_Posting();
        selectedIds = new HashSet<int>();
    }

#line default
#line hidden
#nullable disable
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private MudBlazor.ISnackbar snackBar { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private DataAccess.Contracts.IGLPostingService glPostingService { get; set; }
    }
}
#pragma warning restore 1591
